// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.2
// source: pkg/types/types.proto

package types

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Backdrop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Aliases      []string `protobuf:"bytes,2,rep,name=aliases,proto3" json:"aliases,omitempty"`
	Stage        string   `protobuf:"bytes,3,opt,name=stage,proto3" json:"stage,omitempty"`
	ForwardStage bool     `protobuf:"varint,4,opt,name=forward_stage,json=forwardStage,proto3" json:"forward_stage,omitempty"`
}

func (x *Backdrop) Reset() {
	*x = Backdrop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backdrop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backdrop) ProtoMessage() {}

func (x *Backdrop) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backdrop.ProtoReflect.Descriptor instead.
func (*Backdrop) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{0}
}

func (x *Backdrop) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Backdrop) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *Backdrop) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *Backdrop) GetForwardStage() bool {
	if x != nil {
		return x.ForwardStage
	}
	return false
}

type Stage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string     `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Box       *Box       `protobuf:"bytes,2,opt,name=box,proto3" json:"box,omitempty"`
	Resources *Resources `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`
}

func (x *Stage) Reset() {
	*x = Stage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stage) ProtoMessage() {}

func (x *Stage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stage.ProtoReflect.Descriptor instead.
func (*Stage) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{1}
}

func (x *Stage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Stage) GetBox() *Box {
	if x != nil {
		return x.Box
	}
	return nil
}

func (x *Stage) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

type Box struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version     string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	AccessToken string `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *Box) Reset() {
	*x = Box{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box) ProtoMessage() {}

func (x *Box) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box.ProtoReflect.Descriptor instead.
func (*Box) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{2}
}

func (x *Box) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Box) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Box) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Box) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type Resources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu        int64               `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory     int64               `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Volumes    []*PersistentVolume `protobuf:"bytes,3,rep,name=volumes,proto3" json:"volumes,omitempty"`
	UsbFilters []*UsbFilter        `protobuf:"bytes,4,rep,name=usb_filters,json=usbFilters,proto3" json:"usb_filters,omitempty"`
}

func (x *Resources) Reset() {
	*x = Resources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{3}
}

func (x *Resources) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *Resources) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Resources) GetVolumes() []*PersistentVolume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *Resources) GetUsbFilters() []*UsbFilter {
	if x != nil {
		return x.UsbFilters
	}
	return nil
}

type PersistentVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *PersistentVolume) Reset() {
	*x = PersistentVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersistentVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistentVolume) ProtoMessage() {}

func (x *PersistentVolume) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistentVolume.ProtoReflect.Descriptor instead.
func (*PersistentVolume) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{4}
}

func (x *PersistentVolume) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type UsbFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VendorId  string `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	ProductId string `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *UsbFilter) Reset() {
	*x = UsbFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsbFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsbFilter) ProtoMessage() {}

func (x *UsbFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsbFilter.ProtoReflect.Descriptor instead.
func (*UsbFilter) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{5}
}

func (x *UsbFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsbFilter) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *UsbFilter) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{6}
}

type InitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Config string `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{7}
}

func (x *InitRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InitRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type RemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Force   bool `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	Volumes bool `protobuf:"varint,2,opt,name=volumes,proto3" json:"volumes,omitempty"`
}

func (x *RemoveRequest) Reset() {
	*x = RemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRequest) ProtoMessage() {}

func (x *RemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRequest.ProtoReflect.Descriptor instead.
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *RemoveRequest) GetVolumes() bool {
	if x != nil {
		return x.Volumes
	}
	return false
}

type ExistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist bool `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
}

func (x *ExistResponse) Reset() {
	*x = ExistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistResponse) ProtoMessage() {}

func (x *ExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistResponse.ProtoReflect.Descriptor instead.
func (*ExistResponse) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{9}
}

func (x *ExistResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type AvailableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available bool `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *AvailableResponse) Reset() {
	*x = AvailableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableResponse) ProtoMessage() {}

func (x *AvailableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableResponse.ProtoReflect.Descriptor instead.
func (*AvailableResponse) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{10}
}

func (x *AvailableResponse) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type SSHOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname       string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Port           int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Username       string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	PrivateKeyFile string `protobuf:"bytes,4,opt,name=private_key_file,json=privateKeyFile,proto3" json:"private_key_file,omitempty"`
}

func (x *SSHOptionsResponse) Reset() {
	*x = SSHOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSHOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHOptionsResponse) ProtoMessage() {}

func (x *SSHOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHOptionsResponse.ProtoReflect.Descriptor instead.
func (*SSHOptionsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{11}
}

func (x *SSHOptionsResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SSHOptionsResponse) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *SSHOptionsResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SSHOptionsResponse) GetPrivateKeyFile() string {
	if x != nil {
		return x.PrivateKeyFile
	}
	return ""
}

type DockerOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Host     string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	CaFile   string `protobuf:"bytes,3,opt,name=ca_file,json=caFile,proto3" json:"ca_file,omitempty"`
	CertFile string `protobuf:"bytes,4,opt,name=cert_file,json=certFile,proto3" json:"cert_file,omitempty"`
	KeyFile  string `protobuf:"bytes,5,opt,name=key_file,json=keyFile,proto3" json:"key_file,omitempty"`
}

func (x *DockerOptionsResponse) Reset() {
	*x = DockerOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerOptionsResponse) ProtoMessage() {}

func (x *DockerOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerOptionsResponse.ProtoReflect.Descriptor instead.
func (*DockerOptionsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{12}
}

func (x *DockerOptionsResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DockerOptionsResponse) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DockerOptionsResponse) GetCaFile() string {
	if x != nil {
		return x.CaFile
	}
	return ""
}

func (x *DockerOptionsResponse) GetCertFile() string {
	if x != nil {
		return x.CertFile
	}
	return ""
}

func (x *DockerOptionsResponse) GetKeyFile() string {
	if x != nil {
		return x.KeyFile
	}
	return ""
}

var File_pkg_types_types_proto protoreflect.FileDescriptor

var file_pkg_types_types_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64,
	0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x73, 0x0a,
	0x08, 0x42, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x3b, 0x0a, 0x03, 0x62, 0x6f, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f,
	0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6f, 0x78, 0x52, 0x03, 0x62, 0x6f, 0x78, 0x12, 0x4d, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f,
	0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x6a, 0x0a, 0x03,
	0x42, 0x6f, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd9, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x12, 0x50, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64,
	0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x73, 0x12, 0x50, 0x0a, 0x0b, 0x75, 0x73, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f,
	0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55,
	0x73, 0x62, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x75, 0x73, 0x62, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x22, 0x26, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x5b, 0x0a, 0x09,
	0x55, 0x73, 0x62, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x39, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3f, 0x0a,
	0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x22, 0x25,
	0x0a, 0x0d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x11, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x53, 0x53, 0x48,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x15, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x32, 0xe4,
	0x07, 0x0a, 0x0b, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x6c,
	0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63,
	0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64,
	0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x62, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64,
	0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x6a, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69,
	0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64,
	0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f,
	0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x60, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f,
	0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x69, 0x0a, 0x05, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69,
	0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f,
	0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x09,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e,
	0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64,
	0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x76, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x53, 0x48, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f,
	0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x38, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f,
	0x63, 0x6c, 0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x53, 0x48, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c,
	0x69, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6f, 0x64, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x2e, 0x64,
	0x6f, 0x64, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x64, 0x6f, 0x2d, 0x63, 0x6c, 0x69, 0x2f, 0x64, 0x6f, 0x64,
	0x6f, 0x2d, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_types_types_proto_rawDescOnce sync.Once
	file_pkg_types_types_proto_rawDescData = file_pkg_types_types_proto_rawDesc
)

func file_pkg_types_types_proto_rawDescGZIP() []byte {
	file_pkg_types_types_proto_rawDescOnce.Do(func() {
		file_pkg_types_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_types_types_proto_rawDescData)
	})
	return file_pkg_types_types_proto_rawDescData
}

var file_pkg_types_types_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pkg_types_types_proto_goTypes = []interface{}{
	(*Backdrop)(nil),              // 0: com.github.dodo_cli.dodo_stage.types.Backdrop
	(*Stage)(nil),                 // 1: com.github.dodo_cli.dodo_stage.types.Stage
	(*Box)(nil),                   // 2: com.github.dodo_cli.dodo_stage.types.Box
	(*Resources)(nil),             // 3: com.github.dodo_cli.dodo_stage.types.Resources
	(*PersistentVolume)(nil),      // 4: com.github.dodo_cli.dodo_stage.types.PersistentVolume
	(*UsbFilter)(nil),             // 5: com.github.dodo_cli.dodo_stage.types.UsbFilter
	(*Empty)(nil),                 // 6: com.github.dodo_cli.dodo_stage.types.Empty
	(*InitRequest)(nil),           // 7: com.github.dodo_cli.dodo_stage.types.InitRequest
	(*RemoveRequest)(nil),         // 8: com.github.dodo_cli.dodo_stage.types.RemoveRequest
	(*ExistResponse)(nil),         // 9: com.github.dodo_cli.dodo_stage.types.ExistResponse
	(*AvailableResponse)(nil),     // 10: com.github.dodo_cli.dodo_stage.types.AvailableResponse
	(*SSHOptionsResponse)(nil),    // 11: com.github.dodo_cli.dodo_stage.types.SSHOptionsResponse
	(*DockerOptionsResponse)(nil), // 12: com.github.dodo_cli.dodo_stage.types.DockerOptionsResponse
}
var file_pkg_types_types_proto_depIdxs = []int32{
	2,  // 0: com.github.dodo_cli.dodo_stage.types.Stage.box:type_name -> com.github.dodo_cli.dodo_stage.types.Box
	3,  // 1: com.github.dodo_cli.dodo_stage.types.Stage.resources:type_name -> com.github.dodo_cli.dodo_stage.types.Resources
	4,  // 2: com.github.dodo_cli.dodo_stage.types.Resources.volumes:type_name -> com.github.dodo_cli.dodo_stage.types.PersistentVolume
	5,  // 3: com.github.dodo_cli.dodo_stage.types.Resources.usb_filters:type_name -> com.github.dodo_cli.dodo_stage.types.UsbFilter
	7,  // 4: com.github.dodo_cli.dodo_stage.types.DockerStage.Initialize:input_type -> com.github.dodo_cli.dodo_stage.types.InitRequest
	6,  // 5: com.github.dodo_cli.dodo_stage.types.DockerStage.Create:input_type -> com.github.dodo_cli.dodo_stage.types.Empty
	8,  // 6: com.github.dodo_cli.dodo_stage.types.DockerStage.Remove:input_type -> com.github.dodo_cli.dodo_stage.types.RemoveRequest
	6,  // 7: com.github.dodo_cli.dodo_stage.types.DockerStage.Start:input_type -> com.github.dodo_cli.dodo_stage.types.Empty
	6,  // 8: com.github.dodo_cli.dodo_stage.types.DockerStage.Stop:input_type -> com.github.dodo_cli.dodo_stage.types.Empty
	6,  // 9: com.github.dodo_cli.dodo_stage.types.DockerStage.Exist:input_type -> com.github.dodo_cli.dodo_stage.types.Empty
	6,  // 10: com.github.dodo_cli.dodo_stage.types.DockerStage.Available:input_type -> com.github.dodo_cli.dodo_stage.types.Empty
	6,  // 11: com.github.dodo_cli.dodo_stage.types.DockerStage.GetSSHOptions:input_type -> com.github.dodo_cli.dodo_stage.types.Empty
	6,  // 12: com.github.dodo_cli.dodo_stage.types.DockerStage.GetDockerOptions:input_type -> com.github.dodo_cli.dodo_stage.types.Empty
	6,  // 13: com.github.dodo_cli.dodo_stage.types.DockerStage.Initialize:output_type -> com.github.dodo_cli.dodo_stage.types.Empty
	6,  // 14: com.github.dodo_cli.dodo_stage.types.DockerStage.Create:output_type -> com.github.dodo_cli.dodo_stage.types.Empty
	6,  // 15: com.github.dodo_cli.dodo_stage.types.DockerStage.Remove:output_type -> com.github.dodo_cli.dodo_stage.types.Empty
	6,  // 16: com.github.dodo_cli.dodo_stage.types.DockerStage.Start:output_type -> com.github.dodo_cli.dodo_stage.types.Empty
	6,  // 17: com.github.dodo_cli.dodo_stage.types.DockerStage.Stop:output_type -> com.github.dodo_cli.dodo_stage.types.Empty
	9,  // 18: com.github.dodo_cli.dodo_stage.types.DockerStage.Exist:output_type -> com.github.dodo_cli.dodo_stage.types.ExistResponse
	10, // 19: com.github.dodo_cli.dodo_stage.types.DockerStage.Available:output_type -> com.github.dodo_cli.dodo_stage.types.AvailableResponse
	11, // 20: com.github.dodo_cli.dodo_stage.types.DockerStage.GetSSHOptions:output_type -> com.github.dodo_cli.dodo_stage.types.SSHOptionsResponse
	12, // 21: com.github.dodo_cli.dodo_stage.types.DockerStage.GetDockerOptions:output_type -> com.github.dodo_cli.dodo_stage.types.DockerOptionsResponse
	13, // [13:22] is the sub-list for method output_type
	4,  // [4:13] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_types_types_proto_init() }
func file_pkg_types_types_proto_init() {
	if File_pkg_types_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_types_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backdrop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersistentVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsbFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSHOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_types_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_types_types_proto_goTypes,
		DependencyIndexes: file_pkg_types_types_proto_depIdxs,
		MessageInfos:      file_pkg_types_types_proto_msgTypes,
	}.Build()
	File_pkg_types_types_proto = out.File
	file_pkg_types_types_proto_rawDesc = nil
	file_pkg_types_types_proto_goTypes = nil
	file_pkg_types_types_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DockerStageClient is the client API for DockerStage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DockerStageClient interface {
	Initialize(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*Empty, error)
	Create(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*Empty, error)
	Start(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	Exist(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ExistResponse, error)
	Available(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AvailableResponse, error)
	GetSSHOptions(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SSHOptionsResponse, error)
	GetDockerOptions(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DockerOptionsResponse, error)
}

type dockerStageClient struct {
	cc grpc.ClientConnInterface
}

func NewDockerStageClient(cc grpc.ClientConnInterface) DockerStageClient {
	return &dockerStageClient{cc}
}

func (c *dockerStageClient) Initialize(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_stage.types.DockerStage/Initialize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerStageClient) Create(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_stage.types.DockerStage/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerStageClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_stage.types.DockerStage/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerStageClient) Start(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_stage.types.DockerStage/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerStageClient) Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_stage.types.DockerStage/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerStageClient) Exist(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ExistResponse, error) {
	out := new(ExistResponse)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_stage.types.DockerStage/Exist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerStageClient) Available(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AvailableResponse, error) {
	out := new(AvailableResponse)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_stage.types.DockerStage/Available", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerStageClient) GetSSHOptions(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SSHOptionsResponse, error) {
	out := new(SSHOptionsResponse)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_stage.types.DockerStage/GetSSHOptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerStageClient) GetDockerOptions(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DockerOptionsResponse, error) {
	out := new(DockerOptionsResponse)
	err := c.cc.Invoke(ctx, "/com.github.dodo_cli.dodo_stage.types.DockerStage/GetDockerOptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DockerStageServer is the server API for DockerStage service.
type DockerStageServer interface {
	Initialize(context.Context, *InitRequest) (*Empty, error)
	Create(context.Context, *Empty) (*Empty, error)
	Remove(context.Context, *RemoveRequest) (*Empty, error)
	Start(context.Context, *Empty) (*Empty, error)
	Stop(context.Context, *Empty) (*Empty, error)
	Exist(context.Context, *Empty) (*ExistResponse, error)
	Available(context.Context, *Empty) (*AvailableResponse, error)
	GetSSHOptions(context.Context, *Empty) (*SSHOptionsResponse, error)
	GetDockerOptions(context.Context, *Empty) (*DockerOptionsResponse, error)
}

// UnimplementedDockerStageServer can be embedded to have forward compatible implementations.
type UnimplementedDockerStageServer struct {
}

func (*UnimplementedDockerStageServer) Initialize(context.Context, *InitRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Initialize not implemented")
}
func (*UnimplementedDockerStageServer) Create(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDockerStageServer) Remove(context.Context, *RemoveRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedDockerStageServer) Start(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedDockerStageServer) Stop(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedDockerStageServer) Exist(context.Context, *Empty) (*ExistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exist not implemented")
}
func (*UnimplementedDockerStageServer) Available(context.Context, *Empty) (*AvailableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Available not implemented")
}
func (*UnimplementedDockerStageServer) GetSSHOptions(context.Context, *Empty) (*SSHOptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSSHOptions not implemented")
}
func (*UnimplementedDockerStageServer) GetDockerOptions(context.Context, *Empty) (*DockerOptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDockerOptions not implemented")
}

func RegisterDockerStageServer(s *grpc.Server, srv DockerStageServer) {
	s.RegisterService(&_DockerStage_serviceDesc, srv)
}

func _DockerStage_Initialize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerStageServer).Initialize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_stage.types.DockerStage/Initialize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerStageServer).Initialize(ctx, req.(*InitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DockerStage_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerStageServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_stage.types.DockerStage/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerStageServer).Create(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DockerStage_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerStageServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_stage.types.DockerStage/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerStageServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DockerStage_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerStageServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_stage.types.DockerStage/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerStageServer).Start(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DockerStage_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerStageServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_stage.types.DockerStage/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerStageServer).Stop(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DockerStage_Exist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerStageServer).Exist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_stage.types.DockerStage/Exist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerStageServer).Exist(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DockerStage_Available_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerStageServer).Available(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_stage.types.DockerStage/Available",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerStageServer).Available(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DockerStage_GetSSHOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerStageServer).GetSSHOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_stage.types.DockerStage/GetSSHOptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerStageServer).GetSSHOptions(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DockerStage_GetDockerOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerStageServer).GetDockerOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.dodo_cli.dodo_stage.types.DockerStage/GetDockerOptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerStageServer).GetDockerOptions(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _DockerStage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.github.dodo_cli.dodo_stage.types.DockerStage",
	HandlerType: (*DockerStageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Initialize",
			Handler:    _DockerStage_Initialize_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _DockerStage_Create_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _DockerStage_Remove_Handler,
		},
		{
			MethodName: "Start",
			Handler:    _DockerStage_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _DockerStage_Stop_Handler,
		},
		{
			MethodName: "Exist",
			Handler:    _DockerStage_Exist_Handler,
		},
		{
			MethodName: "Available",
			Handler:    _DockerStage_Available_Handler,
		},
		{
			MethodName: "GetSSHOptions",
			Handler:    _DockerStage_GetSSHOptions_Handler,
		},
		{
			MethodName: "GetDockerOptions",
			Handler:    _DockerStage_GetDockerOptions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/types/types.proto",
}
